[{"path":"/articles/Example_Analysis.html","id":"loading-necessary-packages","dir":"Articles","previous_headings":"","what":"Loading Necessary Packages","title":"Example_Analysis","text":"","code":"# Loads tidyverse library(tidyverse)  # Loads halfplus7 -- the package of interest library(halfplus7)"},{"path":"/articles/Example_Analysis.html","id":"saving-the-data","dir":"Articles","previous_headings":"","what":"Saving the Data","title":"Example_Analysis","text":"","code":"download_and_save <- function(file_name, url) {   data_folder <- \"../data\"   file_path <- file.path(\"../data\", file_name)   # See if the file already exists   if (!file.exists(\"../data\")) {     dir.create(\"../data\", recursive = TRUE)   }   if (!file.exists(file_path)) {     # Download the data if it does not exist     data <- readr::read_csv(url)     # Saves the data to the path with the desired name     write.csv(data, file = file_path, row.names = FALSE)   } }  # Uses download_and_save function with age_gaps.csv from GitHub download_and_save(\"age_gaps.csv\", 'https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2023/2023-02-14/age_gaps.csv')"},{"path":"/articles/Example_Analysis.html","id":"loading-dataset","dir":"Articles","previous_headings":"","what":"Loading Dataset","title":"Example_Analysis","text":"","code":"# Imports raw age_gap dataset age_gaps_raw <- read_csv(\"../data/age_gaps.csv\") #> Rows: 1155 Columns: 13 #> ── Column specification ──────────────────────────────────────────────────────── #> Delimiter: \",\" #> chr  (6): movie_name, director, actor_1_name, actor_2_name, character_1_gend... #> dbl  (5): release_year, age_difference, couple_number, actor_1_age, actor_2_age #> date (2): actor_1_birthdate, actor_2_birthdate #>  #> ℹ Use `spec()` to retrieve the full column specification for this data. #> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."},{"path":"/articles/Example_Analysis.html","id":"cleaning-dataset","dir":"Articles","previous_headings":"","what":"Cleaning Dataset","title":"Example_Analysis","text":"","code":"age_gaps_v1 <- age_gaps_raw %>%   # creates new variable to describe sexual orientation of couple   mutate(orientation = ifelse(character_1_gender == \"man\" & character_2_gender == \"man\" |                                character_1_gender == \"woman\" & character_2_gender == \"woman\",                              \"LGBTQ\",                              \"Straight\"),          # modifies birthdate variables to be treated as dates          actor_1_birthdate = ymd(actor_1_birthdate),          actor_2_birthdate = ymd(actor_2_birthdate))  age_gaps_straight <- age_gaps_v1 %>%   # only includes straight couples   filter(orientation == \"Straight\") %>%   # create new variables to identify characteristics of actors listed by their gender   mutate(     man_age = case_when(       character_1_gender == \"man\" ~ actor_1_age,        TRUE ~ actor_2_age),     woman_age = case_when(       character_1_gender == \"woman\" ~ actor_1_age,        TRUE ~ actor_2_age),     man_birthdate = case_when(       character_1_gender == \"man\" ~ actor_1_birthdate,        TRUE ~ actor_2_birthdate),     woman_birthdate = case_when(       character_1_gender == \"woman\" ~ actor_1_birthdate,        TRUE ~ actor_2_birthdate),     man_name = case_when(       character_1_gender == \"man\" ~ actor_1_name,        TRUE ~ actor_2_name),     woman_name = case_when(       character_1_gender == \"woman\" ~ actor_1_name,        TRUE ~ actor_2_name),       # identifies the gender of the older actor in the couple     older_actor = case_when(       man_birthdate < woman_birthdate ~ \"man\",       woman_birthdate < man_birthdate ~ \"woman\",       TRUE ~ \"same birthdate\"     )   )"},{"path":"/articles/Example_Analysis.html","id":"visualizing-age-gaps-over-time","dir":"Articles","previous_headings":"","what":"Visualizing Age Gaps over Time","title":"Example_Analysis","text":"","code":"ggplot(age_gaps_straight, aes(x = release_year, y = age_difference, color = older_actor)) +   # adds jitter for discrete data   geom_jitter(alpha = 0.5) +   # designates color of points by gender of older actor in couple   scale_color_manual(values = c(\"man\" = \"darkgreen\", \"woman\" = \"purple\"),     labels = c(\"Man\", \"Woman\")) +   # creates labels for plot   labs(     title = \"Movie Couple Age Differences Over Time\",     x = \"Year\",     y = \"Age Difference\",     color = \"Gender of Older \\nActor in Couple:\"   ) +   theme_minimal()"},{"path":"/articles/Example_Analysis.html","id":"age-comparison-of-men-and-women-in-movie-couples","dir":"Articles","previous_headings":"","what":"Age Comparison of Men and Women in Movie Couples","title":"Example_Analysis","text":"Please note plot includes demonstration check_couple function.","code":"age_gaps_straight %>%   # demonstrates check_couple function from halfplus7 package   mutate(match_rule = case_when(     check_couple(man_age, woman_age) == FALSE ~ \"No\",     check_couple(man_age, woman_age) == TRUE ~ \"Yes\")) %>%   ggplot(aes(man_age, woman_age, color = match_rule)) +   # adds jitter for discrete data   geom_jitter(alpha = 0.5) +     # adds line at y = x to illustrate couples with the same age   geom_abline(intercept = 0, slope = 1, linetype = \"dashed\", color = \"black\") +   # designates colors to identify whether couple meets 'Half-Your-Age-Plus-7' Rule   scale_color_manual(values = c(\"Yes\" = \"blue\", \"No\" = \"red\")) +   theme_minimal() +   # adds labels for plot   labs(     title = \"Age Comparison of Woman and Man in Straight Movie Couples\",     subtitle = \"Observations that fall on the black dashed line indicate the same age for the man and woman.\",     x = \"Man's Age\",     y = \"Woman's Age\",     color = \"Does the Couple follow the \\n'Half-Your-Age-Plus-Seven' Rule?\"   ) +    # moves legend to top of plot   theme(legend.position = \"top\")"},{"path":"/articles/Example_Analysis.html","id":"creates-datasets-for-the-straight-couples-with-the-largest-age-gaps","dir":"Articles","previous_headings":"","what":"Creates Datasets for the Straight Couples with the largest age gaps","title":"Example_Analysis","text":"","code":"# creates data set with couples with largest age gaps, 10 with older man and 10 with older woman top_age_gaps <- age_gaps_straight %>%   arrange(desc(age_difference)) %>%   group_by(older_actor) %>%   slice_head(n = 10)  # modifies dataset above  top_age_gaps_long <- top_age_gaps %>%   uncount(weight = 1) %>%   pivot_longer(cols = c(man_age, woman_age),                 names_to = \"actor\",                 values_to = \"age\") %>%   mutate(actor_name = ifelse(actor == \"man_age\", man_name, woman_name),          age_lowerlim = lower_limit(age),          age_upperlim = upper_limit(age))"},{"path":"/articles/Example_Analysis.html","id":"top-10-largest-age-gaps-when-man-is-older","dir":"Articles","previous_headings":"","what":"Top 10 Largest Age Gaps when Man is Older","title":"Example_Analysis","text":"","code":"top_age_gaps_long %>%   filter(older_actor == \"man\") %>%   ggplot(aes(x = age, y = reorder(movie_name, age_difference))) +   geom_segment(aes(x = age, xend = ifelse(actor == \"man_age\", age_lowerlim, age),                    y = movie_name, yend = movie_name),                 color = \"lightgreen\", alpha = 0.25, linetype = \"solid\", size = 5) +   geom_text(data = . %>% filter(actor == \"man_age\"),             aes(label = paste(\"lower limit =\", age_lowerlim), x = age_lowerlim, y = movie_name),              vjust = 0, hjust = 0, size = 2.5, color = \"darkgreen\") +   geom_segment(aes(x = age, xend = ifelse(actor == \"woman_age\", age + age_difference, age),                     y = movie_name, yend = movie_name),                 color = \"gray\", linetype = \"dashed\", linewidth = 0.5) +     geom_label(aes(label = age, color = actor), show.legend = FALSE,               fill = \"white\", size = 3, hjust = 0.5, vjust = 0.5) +     geom_text(aes(label = actor_name, y = movie_name),              vjust = -1.2, hjust = 0.5, size = 3) +   labs(title = \"Top 10 Largest Age Gaps in Straight Movie Couples \\nWhen the Man is Older\",        subtitle = \"Green shaded segments illustrate the lower age range for older actors, \\ngiven the 'Half-Your-Age-Plus-7' Rule. If the younger actor's age is not \\nincluded in this range that indicates that the couple would not meet the \\nRule.\",         x = \"Actor Age (years)\",         y = \"Movie Title\",        color = \"Gender:\",        caption = \"Created using TidyTuesday data\") +   scale_color_manual(values = c(\"man_age\" = \"darkgreen\", \"woman_age\" = \"purple\"),     labels = c(\"Man\", \"Woman\")) +   theme_minimal() +    theme(legend.position = \"top\") +   xlim(c(12, 80)) #> Warning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0. #> ℹ Please use `linewidth` instead. #> This warning is displayed once every 8 hours. #> Call `lifecycle::last_lifecycle_warnings()` to see where this warning was #> generated."},{"path":"/articles/Example_Analysis.html","id":"top-10-largest-age-gaps-when-woman-is-older","dir":"Articles","previous_headings":"","what":"Top 10 Largest Age Gaps when Woman is Older","title":"Example_Analysis","text":"","code":"top_age_gaps_long %>%   filter(older_actor == \"woman\") %>%   ggplot(aes(x = age, y = reorder(interaction(movie_name, age_difference), age_difference))) +   geom_segment(aes(x = age, xend = ifelse(actor == \"man_age\", age_upperlim, age),                    y = reorder(interaction(movie_name, age_difference), age_difference), yend = reorder(interaction(movie_name, age_difference), age_difference)),                 color = \"lightgreen\", alpha = 0.25, linetype = \"solid\", size = 5) +   geom_text(data = . %>% filter(actor == \"man_age\"),             aes(label = paste(\"upper limit =\", age_upperlim), x = age + 2, y = reorder(interaction(movie_name, age_difference), age_difference)),              vjust = 0, hjust = 0, size = 2.5, color = \"darkgreen\") +   geom_segment(aes(x = age, xend = ifelse(actor == \"man_age\", age + age_difference, age),                     y = interaction(movie_name, age_difference), yend = interaction(movie_name, age_difference)),                 color = \"gray\", linetype = \"dashed\", linewidth = 0.5) +   geom_label(aes(label = age, color = actor), show.legend = FALSE,               fill = \"white\", size = 3, hjust = 0.5, vjust = 0.5) +   geom_text(aes(label = actor_name, y = interaction(movie_name, age_difference)),              vjust = -1.2, hjust = 0.5, size = 3) +   labs(title = \"Top 10 Largest Age Gaps in Straight Movie Couples \\nWhen the Woman is Older\",       subtitle = \"Green shaded segments illustrate the upper age range for younger actors, \\ngiven the 'Half-Your-Age-Plus-7' Rule. If the younger actor's age is not \\nincluded in this range that indicates that the couple would not meet the \\nRule.\",         x = \"Actor Age (years)\",        x = \"Actor Age (years)\",         y = \"Movie Title\",        caption = \"Created using TidyTuesday data\") +   scale_color_manual(values = c(\"man_age\" = \"darkgreen\", \"woman_age\" = \"purple\"),     labels = c(\"Man\", \"Woman\")) +   theme_minimal() +    theme(legend.position = \"top\") +   guides(color = guide_legend(title = \"Gender:\")) +   xlim(c(12, 85))"},{"path":"/articles/Example_Analysis.html","id":"functions-used","dir":"Articles","previous_headings":"Top 10 Largest Age Gaps when Woman is Older","what":"Functions Used","title":"Example_Analysis","text":"dplyr : case_when, filter, mutate, slice_head, arrange, group_by tidyr : pivot_longer, uncount lubridate : ymd ggplot2 : geom_jitter, geom_abline, geom_point, geom_segment, geom_text, geom_label halfplus7 : check_couple, upper_limit, lower_limit","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Sydney Lewis. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Lewis S (2023). halfplus7: Package (Title Case). R package version 0.1.0, https://github.com/jhu-statprogramming-fall-2023/biostat777-project3-part1-sydlewis.","code":"@Manual{,   title = {halfplus7: What the Package Does (Title Case)},   author = {Sydney Lewis},   year = {2023},   note = {R package version 0.1.0},   url = {https://github.com/jhu-statprogramming-fall-2023/biostat777-project3-part1-sydlewis}, }"},{"path":"/index.html","id":"halfplus7-","dir":"","previous_headings":"","what":"What the Package Does (Title Case)","title":"What the Package Does (Title Case)","text":"age just number? age old young date? “Half--Age-Plus-Seven” Rule sometimes used decide whether relative ages individuals couple appropriate. package provides several functions apply Rule given ages. lower_limit : provides lower age limit given age upper_limit : provides upper age limit given age age_range : provides appropriate age range given age check_couple : provides verdict couple, given two ages ages_firstok : provides ages couple first meet rule, given birth dates Please note: package meant silly provide absolute judgement couple. Relationships complicated super simple mathematical formula one aspect individuals involved shouldn’t hold much weight. Cheers love connection every age! ❤️","code":""},{"path":"/reference/age_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Age Range — age_range","title":"Age Range — age_range","text":"Prints age range specific age, following \"Half--Age-Plus-Seven\" Rule","code":""},{"path":"/reference/age_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Age Range — age_range","text":"","code":"age_range(age)"},{"path":"/reference/age_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Age Range — age_range","text":"age numeric, age output relative ","code":""},{"path":"/reference/age_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Age Range — age_range","text":"ages appropriate age range age entered","code":""},{"path":"/reference/age_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Age Range — age_range","text":"","code":"age_range(28) #> lower_limit upper_limit  #>          21          42   age_range(13) #> Error in age_range(13): Error: all ages must be 14 or greater  age_range(85) #> lower_limit upper_limit  #>        49.5       156.0"},{"path":"/reference/ages_firstok.html","id":null,"dir":"Reference","previous_headings":"","what":"First Okay — ages_firstok","title":"First Okay — ages_firstok","text":"Prints ages two people entered birth dates appropriate age gap, given \"Half--Age-Plus-7\" Rule.","code":""},{"path":"/reference/ages_firstok.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"First Okay — ages_firstok","text":"","code":"ages_firstok(birthdate1, birthdate2)"},{"path":"/reference/ages_firstok.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"First Okay — ages_firstok","text":"birthdate1 date, date person 1 born, written \"YYYY-MM-DD\" birthdate2 date, date person 2 born, written \"YYYY-MM-DD\"","code":""},{"path":"/reference/ages_firstok.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"First Okay — ages_firstok","text":"ages appropriate age range age entered","code":""},{"path":"/reference/ages_firstok.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"First Okay — ages_firstok","text":"","code":"ages_firstok(\"1970-03-19\", \"2000-07-09\") #>   Age of Older Person Age of Younger Person  #>              74.61602              44.30801   ages_firstok(\"1800-01-20\", \"1900-03-17\") #>   Age of Older Person Age of Younger Person  #>              214.3012              114.1506"},{"path":"/reference/check_couple.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Couple — check_couple","title":"Check Couple — check_couple","text":"Using \"Half--Age-Plus-Seven\" Rule, function returns \"verdict\" given two ages members couple","code":""},{"path":"/reference/check_couple.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Couple — check_couple","text":"","code":"check_couple(age1, age2)"},{"path":"/reference/check_couple.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Couple — check_couple","text":"age1 numeric, age first member couple age2 numeric, age second member couple","code":""},{"path":"/reference/check_couple.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Couple — check_couple","text":"verdict couple's ages using \"Half--Age-Plus-Seven\" Rule","code":""},{"path":"/reference/check_couple.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Couple — check_couple","text":"","code":"check_couple(70, 30) #> [1] FALSE  check_couple(-10, 19) #> Error in check_couple(-10, 19): Error: Age must be 14 or older for both individuals  check_couple(50, 80) #> [1] TRUE"},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""},{"path":"/reference/lower_limit.html","id":null,"dir":"Reference","previous_headings":"","what":"Lower Age Limit — lower_limit","title":"Lower Age Limit — lower_limit","text":"Prints lower age limit specific age, following \"Half--Age-Plus-Seven\" Rule","code":""},{"path":"/reference/lower_limit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Lower Age Limit — lower_limit","text":"","code":"lower_limit(age)"},{"path":"/reference/lower_limit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Lower Age Limit — lower_limit","text":"age numeric, age output relative ","code":""},{"path":"/reference/lower_limit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Lower Age Limit — lower_limit","text":"age lower limit age entered","code":""},{"path":"/reference/lower_limit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Lower Age Limit — lower_limit","text":"","code":"lower_limit(30) #> [1] 22  lower_limit(17) #> [1] 15.5  lower_limit(99) #> [1] 56.5"},{"path":"/reference/upper_limit.html","id":null,"dir":"Reference","previous_headings":"","what":"Upper Age Limit — upper_limit","title":"Upper Age Limit — upper_limit","text":"Prints upper age limit specific age, following \"Half--Age-Plus-Seven\" Rule","code":""},{"path":"/reference/upper_limit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Upper Age Limit — upper_limit","text":"","code":"upper_limit(age)"},{"path":"/reference/upper_limit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Upper Age Limit — upper_limit","text":"age numeric, age output relative ","code":""},{"path":"/reference/upper_limit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Upper Age Limit — upper_limit","text":"age upper limit age entered","code":""},{"path":"/reference/upper_limit.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Upper Age Limit — upper_limit","text":"","code":"upper_limit(30) #> [1] 46  upper_limit(15) #> [1] 16  upper_limit(57) #> [1] 100"}]
